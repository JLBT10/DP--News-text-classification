name: CI-CD Pipeline
on:
  push
  
jobs:
  #Checking-code-quality:
    #runs-on: ubuntu-latest
    #steps:
    
      # Action 1: Pull the code from GitHub
      #- name: Checkout code
        #uses: actions/checkout@v3
       
      # Action 2: Installation of Python and pip
      #- name: Install Python and pip
        #uses: actions/setup-python@v3
        #with:
          #python-version: '3.12.6'  # Use quotes around the version
         
      # Action 3: Installation of dependencies
      #- name: Install dependencies
        #run: |
          #pip install pylint
          #pip install -r ./model_dev/requirements.txt
         
      # Action 4: Run pylint
      #- name: Run pylint
        #run: pylint model_dev/train.py
    
  launch-training:
    runs-on: self-hosted
    steps:

      - name: checkout code 
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Store Docker Hub username in GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Store Docker Hub password in GitHub secrets

      - name: run docker compose
        run: |
          cd model_dev
          docker compose up --build -d

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/model_dev:trainings
          docker push ${{ secrets.DOCKER_USERNAME }}/model_dev:mlflow


 # building-app-dockerfile:
  #  runs-on: ubuntu-lateest
   # steps:
      
   #   # Action 1: Pull the code from GitHub
   # - name: Checkout code
   #   uses: actions/checkout@v3

   # - name: building and launching app 
   #   run:
    #    docker build -f api.Dockerfile -t app_docker .
    #    docker run -it app_docker
        
     
      

